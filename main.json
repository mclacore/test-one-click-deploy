{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.13.1.58284",
      "templateHash": "18443316442580023499"
    }
  },
  "parameters": {
    "name": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2019-10-01-preview",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "kind": "AzurePowerShell",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('app-reg-automation', 'Microsoft.ManagedIdentity/userAssignedIdentities', 'AppRegCreator'))]": {}
        }
      },
      "properties": {
        "azPowerShellVersion": "5.0",
        "arguments": "[format('-resourceName \"{0}\"', parameters('name'))]",
        "scriptContent": "      param([string] $resourceName)\n      $token = (Get-AzAccessToken -ResourceUrl https://graph.microsoft.com).Token\n      $headers = @{'Content-Type' = 'application/json'; 'Authorization' = 'Bearer ' + $token}\n\n      $template = @{\n        displayName = $resourceName\n        requiredResourceAccess = @(\n          @{\n            resourceAppId = \"00000003-0000-0000-c000-000000000000\"\n            resourceAccess = @(\n              @{\n                id = \"e1fe6dd8-ba31-4d61-89e7-88639da4683d\"\n                type = \"Scope\"\n              }\n            )\n          }\n        )\n        signInAudience = \"AzureADMyOrg\"\n      }\n      \n      // Upsert App registration\n      $app = (Invoke-RestMethod -Method Get -Headers $headers -Uri \"https://graph.microsoft.com/beta/applications?filter=displayName eq '$($resourceName)'\").value\n      $principal = @{}\n      if ($app) {\n        $ignore = Invoke-RestMethod -Method Patch -Headers $headers -Uri \"https://graph.microsoft.com/beta/applications/$($app.id)\" -Body ($template | ConvertTo-Json -Depth 10)\n        $principal = (Invoke-RestMethod -Method Get -Headers $headers -Uri \"https://graph.microsoft.com/beta/servicePrincipals?filter=appId eq '$($app.appId)'\").value\n      } else {\n        $app = (Invoke-RestMethod -Method Post -Headers $headers -Uri \"https://graph.microsoft.com/beta/applications\" -Body ($template | ConvertTo-Json -Depth 10))\n        $principal = Invoke-RestMethod -Method POST -Headers $headers -Uri  \"https://graph.microsoft.com/beta/servicePrincipals\" -Body (@{ \"appId\" = $app.appId } | ConvertTo-Json)\n      }\n      \n      // Creating client secret\n      $app = (Invoke-RestMethod -Method Get -Headers $headers -Uri \"https://graph.microsoft.com/beta/applications/$($app.id)\")\n      \n      foreach ($password in $app.passwordCredentials) {\n        Write-Host \"Deleting secret with id: $($password.keyId)\"\n        $body = @{\n          \"keyId\" = $password.keyId\n        }\n        $ignore = Invoke-RestMethod -Method POST -Headers $headers -Uri \"https://graph.microsoft.com/beta/applications/$($app.id)/removePassword\" -Body ($body | ConvertTo-Json)\n      }\n      \n      $body = @{\n        \"passwordCredential\" = @{\n          \"displayName\"= \"Client Secret\"\n        }\n      }\n      $secret = (Invoke-RestMethod -Method POST -Headers $headers -Uri  \"https://graph.microsoft.com/beta/applications/$($app.id)/addPassword\" -Body ($body | ConvertTo-Json)).secretText\n      \n      $DeploymentScriptOutputs = @{}\n      $DeploymentScriptOutputs['objectId'] = $app.id\n      $DeploymentScriptOutputs['clientId'] = $app.appId\n      $DeploymentScriptOutputs['clientSecret'] = $secret\n      $DeploymentScriptOutputs['principalId'] = $principal.id\n\n// create app role\n\n    ",
        "cleanupPreference": "OnSuccess",
        "retentionInterval": "P1D",
        "forceUpdateTag": "[parameters('currentTime')]"
      }
    }
  ],
  "outputs": {
    "objectId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', parameters('name')), '2019-10-01-preview').outputs.objectId]"
    },
    "clientId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', parameters('name')), '2019-10-01-preview').outputs.clientId]"
    },
    "clientSecret": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', parameters('name')), '2019-10-01-preview').outputs.clientSecret]"
    },
    "principalId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', parameters('name')), '2019-10-01-preview').outputs.principalId]"
    }
  }
}
